#include <stdio.h>
#include <stdlib.h>

// Linear Search
int linearSearch(int arr[], int n, int key) {
    for (int i = 0; i < n; i++)
        if (arr[i] == key) return i;
    return -1;
}

// Binary Search (array must be sorted)
int binarySearch(int arr[], int n, int key) {
    int l = 0, r = n - 1;
    while (l <= r) {
        int mid = l + (r - l) / 2;
        if (arr[mid] == key) return mid;
        else if (arr[mid] < key) l = mid + 1;
        else r = mid - 1;
    }
    return -1;
}

// Function to sort array (ascending) using bubble sort
void sort(int arr[], int n) {
    for (int i = 0; i < n-1; i++)
        for (int j = 0; j < n-i-1; j++)
            if (arr[j] > arr[j+1]) {
                int t = arr[j]; arr[j] = arr[j+1]; arr[j+1] = t;
            }
}

int main() {
    int n, key;
    scanf("%d", &n);
    int arr[n];
    for (int i = 0; i < n; i++) scanf("%d", &arr[i]);
    scanf("%d", &key);

    int idx = linearSearch(arr, n, key);
    if (idx != -1) printf("Linear Search: Element found at position %d\n", idx+1);
    else printf("Linear Search: Element not found\n");

    sort(arr, n); // sort array for binary search

    idx = binarySearch(arr, n, key);
    if (idx != -1) printf("Binary Search: Element found at position %d\n", idx+1);
    else printf("Binary Search: Element not found\n");

    return 0;
}
